<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://xiachenrui.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://xiachenrui.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-03-02T04:48:31+00:00</updated><id>https://xiachenrui.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">RAG for biological models</title><link href="https://xiachenrui.github.io/blog/2024/RAG/" rel="alternate" type="text/html" title="RAG for biological models"/><published>2024-07-17T00:00:00+00:00</published><updated>2024-07-17T00:00:00+00:00</updated><id>https://xiachenrui.github.io/blog/2024/RAG</id><content type="html" xml:base="https://xiachenrui.github.io/blog/2024/RAG/"><![CDATA[<h1 id="rag-for-biological-models">RAG for biological models</h1> <h2 id="what-is-rag">What is RAG？</h2> <p>Retrieval-Augmented Generation (RAG) 技术，中文名是检索增强生成，RAG通过检索获取相关的知识并将其融入Prompt，让大模型能够参考相应的知识从而给出合理回答。因此，可以将RAG的核心理解为“检索+生成”，前者主要是利用向量数据库的高效存储和检索能力，召回目标知识；后者则是利用大模型和Prompt工程，将召回的知识合理利用，生成目标答案。主要的优势是方便地将外部知识注入大模型。好处有:</p> <ol> <li>扩展性强，外部数据直接更新到数据库而不用重新训练或者微调模型本身</li> <li>结果可控，减少出现幻觉，因为检索到结果直接对应了最终生成的结果</li> <li>可解释性强</li> <li>定制能力，数据安全能力强</li> </ol> <p>在使用中，主要分为两个阶段：</p> <ol> <li><strong>数据准备阶段</strong>：数据提取 » 文本分割 » 向量化（embedding）» 数据入库</li> <li><strong>应用阶段</strong>：用户提问 » 数据检索（召回） » 注入Prompt » LLM生成答案</li> </ol> <h2 id="how-to-use-it-in-biological-models">How to use it in biological models？</h2> <p>TBD</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="works,"/><category term="big-model"/><summary type="html"><![CDATA[How to use RAG for biological models]]></summary></entry></feed>